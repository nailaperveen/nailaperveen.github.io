<!DOCTYPE html>
<html lang="en">

<head>
    	<meta charset="utf-8">
    	<meta http-equiv="X-UA-Compatible" content="IE=edge">
    	<meta name="viewport" content="width=device-width, initial-scale=1">
    	<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    	<title>Learn Python</title>

    	<!-- Bootstrap -->
    	<link href="../css/bootstrap.min.css" rel="stylesheet">
	<link rel="import" href="../import.html">
</head>


<body ng-app="myApp" ng-controller="myCtrl">


	<div class="container">
		<div id="subcontainer"></div>
                <script>
		    var link = document.querySelector('link[rel="import"]');

		    // Clone the <template> in the import.
		    var template = link.import.querySelector('template');
		    var clone = document.importNode(template.content, true);

		    document.querySelector('#subcontainer').appendChild(clone);
		  </script>




		<div class="row">
			<div class="container page-header alert-success">
				<h1> Learning Python</h1>
			</div>
		</div>

		<div class="row">
			<div class=" panel panel-info">
		  		<!-- Default panel contents -->
		  		<div class="panel-heading">Objectives</div>
		  		<div class="panel-body">
					<p>1. To increase the basic knowledge about Python </p>
					<p>2. To learn Python modes</p>
		  		</div>

		 		<ul class="list-group">
					<li class="list-group-item">Duration: 5 min</li>
					<li class="list-group-item">Exercise : 1</li>
				   
				</ul>
			</div>
		</div>


	  	<div ng-bind="section1"></div>
		
		<br><br>
		
		<div>
			<h4> <span class="label label-warning"> An Interpreted Language </span></h4>
			<p > Python can run on any platform including unix, linux, windows etc. On a Unix machine usually the Python interpreter is 					installed in /usr/local/bin folder. On a Windows machine the defualt place for Python interpreter is C:\. But the 					location is a part of installation process so you can change its place but it is not recommended. If you change the 					location of Python interpreter then there is a need to update the PATH variable. To start Python you just type python in 					terminal window.
			</p>
		</div>

		<br><br>

		<div>
			<h4><span class="label label-warning">Interactive Mode</span></h4>
			<p > Three greater-than signs (>>>) is the primary prompt of Python. when we run Python using python command, it is started in 					interactive mode. First it shows the version information and then display the primary prompt. Primary prompt(>>>) means 				interpreter is ready to accept commands and run them immediately. when a statement breaks into two lines it shows the 					secondary prompt which is tripple dot (...) 
			</p>
			
			
		</div>

		<br><br>
		
		<div>
			<h4><span class="label label-warning">Jupyter Notebook</span></h4>
			<p >we can run python from command line as well as we can write scripts in any editor. A brief introduction of jupyter notebook is essential here. It is easy to write and run python code from inside notebook rather than using any text editor. The Jupyter Notebook App is a server-client application that allows editing and running notebook documents via a web browser. Notebook documents produced by the Jupyter Notebook contain both computer code (e.g. python) and rich text elements (paragraph, equations, figures, links, etc...). Notebook documents are both human-readable documents containing the analysis description and the results (figures, tables, etc..) as well as executable documents which can be run to perform data analysis.  </p>
		</div >

		<br>
		<div class="alert alert-danger" role="alert"> Our goal is to Learn Programming : 
			<p >
				The important thing to understand here is that we are not limited to python only. Rather we are discussing general 					programming techniques that can be applied any where in any programming language. we will discuss general concepts and 					tricks of porgramming. Once the basic concepts are clear it is easy to code in any language. 
			</p>
		</div>

 
		<br><br>


		<div class="alert alert-info" role="alert"> Using Data : 
			<p >
				To continue with our discussion here we have a dataset of Hepatitis Patients. It contains different attributes related 					with dignostic and intensity of hepatitis in different age groups. Based on that attributes Our goal is to read, 					understand, process, and finally make some observations on that data. To achieve this all, there are some basic concepts 					that we need to understand first.
			</p>
		</div>

 
		<br><br>

		<div>
			<h4><span class="label label-danger">Where to keep the data?</span></h4>
			<p >As we have to deal with data; age of patients, different blood measurements etc so first we will see what is data? and how we organize it?<br>
As we have discussed before data can be anything, a number, a name, some text or image. To perform processing on our data(numbers and strings), we need them to store somewhere. That is where the concepts of variables come in. Variables are simple containers to hold some data in memory. A variable can hold any thing: Number, String, File, image, video etc. In Python there is no need to define the type of variable. We just declare the name of a variable and pass some value to it. Depending on the value passed to the variable, the interpreter determines the type of variable automatically and it can be changed at any time. For example there is a variable "price". Using interactive mode, we can assign value in it like this  
			</p>
			
			
		</div>

		<br><br>
		
		<div class="panel panel-default" style="border-left: 6px solid #646D7E;">
  			<div class="panel-body">
    				>>> price = 80 <br>
				
  			</div>
		</div>
		
		<div>
			
			<p>and later in our code we may use the same variable like this.
			</p>
		</div>

		<div class="panel panel-default" style="border-left: 6px solid #646D7E;">
  			<div class="panel-body">
    				>>> price = "eighty" <br>
				
  			</div>
		</div>

		<br><br>
		
		<div>
			<h4>Remember: To start python interactive mode type python in terminal from anywhere. It will start python in interactive mode.</h4>
			
		</div >


		<br><br>
		<div>
			
			<p>
				Here in this example first we assigned a numeric value and then we assigned a string value in the same variable. It is acceptable in Python. There will be no error. But using variables like this is a bad practice, as we may confused ourselves later in our code or it may bring inconsistency at run time.</p>

			<p>
				 If we try to use a variable that is not assigned a value. it will give an error like this.
			</p>
		</div>

		<div class="panel panel-default" style="border-left: 6px solid #646D7E;">
  			<div class="panel-body">
    				>>> print (item)
				Traceback (most recent call last):<br>
				  File "stdin", line 1, in module<br>
				NameError: name 'item' is not defined
				<br>
				

  			</div>
		</div>

		<br><br>
		<div>
			<h4><span class="label label-warning">Display Data</span></h4>
			<p >print statement in Python is used to diplay output on screen. It can take zero or more parameters. With zero parameters it displays a blank line. If there are more than one parameter, they are separated with commas. We can also perform arithemtic in print statment.

			</p>
			
			
		</div>
		<div class="panel panel-default" style="border-left: 6px solid #646D7E;">
  			<div class="panel-body">
    				>>> print("5000 Kbs is equal to ", 5000/1000 , " Mbs") <br>
				
  			</div>
		</div>
		<div class="panel panel-default" style="border-left: 6px solid brown;">
  			<div class="panel-body">
    				5000 Kbs is equal to 5 Mbs

  			</div>
		</div>
		<br><br>
		<div>

			<p >To display a value from variable give the name of variable without quotation marks.

			</p>
			
			
		</div>
		<div class="panel panel-default" style="border-left: 6px solid #646D7E;">
  			<div class="panel-body">
                                >>> a = 50 <br>
    				>>> print(a) 
				
  			</div>
		</div>
		<div class="panel panel-default" style="border-left: 6px solid brown;">
  			<div class="panel-body">
    				50

  			</div>
		</div>
		<br><br>

	<div>

			<p >We can use escape sequences inside print function.

			</p>
			
			
		</div>
		<div class="panel panel-default" style="border-left: 6px solid #646D7E;">
  			<div class="panel-body">
                                >>> a = 50 <br>
                                >>> b = 10 <br>
    				>>> print("a = ",a , "\nb =", b, "\nsum = ",a+b) 
				
  			</div>
		</div>
		<div class="panel panel-default" style="border-left: 6px solid brown;">
  			<div class="panel-body">
    				a =  50 <br>
				b = 10 <br>
				sum =  60


  			</div>
		</div>
		<br><br>

		<div class="panel">
			<a class="btn btn-primary" role="button" data-toggle="collapse" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
				Create two variables a and b, assign them some value, divide a by b and print quotient and remainder.
			</a>
		</div>
		<div class="collapse" id="collapseOne">
			<div class="well">
		    	a =  65 <br>
			b = 10 <br>
			print("a = ",a , "\nb =", b, "\nquotient = ",a//b, "\nremainder = ", a%b) 


			</div>
		</div>

		<br><br>

<div class="page-header alert-success">
  <p> <a href="02-types-py">Next >> Types in Python</a> </p>
</div>

	</div><!-- /.container-fluid -->



	<script src="../js/angular.min.js"></script>
	
	
	<script src = "../js/jquery.min.js"> </script>

	<!-- Include all compiled plugins (below), or include individual files as needed -->
	<script src="../js/bootstrap.min.js"></script>

	<script>
		var app = angular.module('myApp', []);
		app.controller('myCtrl', function($scope)
		{
	    		$scope.section1 = "Python is freeware. We call such a software as open source software. Open source means we can get the entire system for free over the Internet. There are no restrictions on copying it, embedding it in systems, or shipping it with products. Python is written in portable ANSI C, and compiles and runs on virtually every major platform in use today. For example, it runs on Unix systems, Linux, MS-DOS, MS-Windows, Macintosh, Amiga, Be-OS, OS/2, VMS, QNX, and more. Python provides all the simplicity and ease of use of a scripting language, along with more advanced programming tools typically found in systems development languages. It is a powerful language.";
	    		

		});
	</script>

</body>
</html>
